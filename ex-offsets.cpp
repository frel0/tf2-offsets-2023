/* offsets used for making external cheats mostly.*/
/* consider using a netvar manager and more instead of those poopy offsetos */

/* one more thing, you can only create some simple esp, glow ('m_bGlowEnabled'), aimbot. thats why you should move to some internal sdk. */

// main offsets

namespace offsets
{
    uintptr_t local_player = 0xc484f0;
    uintptr_t entity_list = 0xc56474;
    uintptr_t glow_object_manager = 0xbe0890;
    uintptr_t client_state = 0x465a58;
    uintptr_t global_vars = 0x3adb78;
    uintptr_t direct3d_device9 = 0xe95f8;
    uintptr_t view_angles = 0x46a5dc;
    uintptr_t max_clients = 0x465d0c;
    uintptr_t is_in_game = 0x5dbce4;
    uintptr_t is_connected = 0x59a94a;
    uintptr_t dormant = 0x1aa;
};

// ctfplayer
			constexpr auto player_object_array_element = 0x0; // Integer
			constexpr auto m_nWaterLevel = 0x1a8; // Byte
			constexpr auto m_vecOrigin = 0x364; // Vector2D
			constexpr auto m_vecOrigin_ = 0x364; // Vector2D
			constexpr auto m_vecOrigin2 = 0x36c; // Float
			constexpr auto m_vecOrigin2_ = 0x36c; // Float
			constexpr auto m_bGlowEnabled = 0xdbd; // Byte
			constexpr auto m_iKartState = 0x156c; // Integer
			constexpr auto m_iReapplyProvisionParity = 0x15a4; // Integer
			constexpr auto m_hOuter = 0x15a8; // Integer
			constexpr auto m_ProviderType = 0x15b0; // Integer
			constexpr auto m_hRagdoll = 0x15d4; // Integer
			constexpr auto m_iClass = 0x1654; // Integer
			constexpr auto m_iszClassIcon = 0x1658; // String (260)
			constexpr auto m_iszCustomModel = 0x175c; // String (260)
			constexpr auto m_vecCustomModelOffset = 0x1860; // Vector
			constexpr auto m_angCustomModelRotation = 0x186c; // Vector
			constexpr auto m_bCustomModelRotates = 0x1878; // Byte
			constexpr auto m_bCustomModelRotationSet = 0x1879; // Byte
			constexpr auto m_bCustomModelVisibleToSelf = 0x187a; // Byte
			constexpr auto m_bUseClassAnimations = 0x187b; // Byte
			constexpr auto m_iClassModelParity = 0x187c; // Integer
			constexpr auto m_flKartNextAvailableBoost = 0x18e4; // Float
			constexpr auto m_iKartHealth = 0x18e8; // Integer
			constexpr auto m_iCaptures = 0x191c; // Integer
			constexpr auto m_iDefenses = 0x1920; // Integer
			constexpr auto m_iKills = 0x1924; // Integer
			constexpr auto m_iDeaths = 0x1928; // Integer
			constexpr auto m_iSuicides = 0x192c; // Integer
			constexpr auto m_iDominations = 0x1930; // Integer
			constexpr auto m_iRevenge = 0x1934; // Integer
			constexpr auto m_iBuildingsBuilt = 0x1938; // Integer
			constexpr auto m_iBuildingsDestroyed = 0x193c; // Integer
			constexpr auto m_iHeadshots = 0x1940; // Integer
			constexpr auto m_iBackstabs = 0x1944; // Integer
			constexpr auto m_iHealPoints = 0x1948; // Integer
			constexpr auto m_iInvulns = 0x194c; // Integer
			constexpr auto m_iTeleports = 0x1950; // Integer
			constexpr auto m_iDamageDone = 0x1954; // Integer
			constexpr auto m_iCrits = 0x1958; // Integer
			constexpr auto m_iResupplyPoints = 0x195c; // Integer
			constexpr auto m_iKillAssists = 0x1960; // Integer
			constexpr auto m_iBonusPoints = 0x1964; // Integer
			constexpr auto m_iPoints = 0x1968; // Integer
			constexpr auto m_iCaptures_ = 0x1970; // Integer
			constexpr auto m_iDefenses_ = 0x1974; // Integer
			constexpr auto m_iKills_ = 0x1978; // Integer
			constexpr auto m_iDeaths_ = 0x197c; // Integer
			constexpr auto m_iSuicides_ = 0x1980; // Integer
			constexpr auto m_iDominations_ = 0x1984; // Integer
			constexpr auto m_iRevenge_ = 0x1988; // Integer
			constexpr auto m_iBuildingsBuilt_ = 0x198c; // Integer
			constexpr auto m_iBuildingsDestroyed_ = 0x1990; // Integer
			constexpr auto m_iHeadshots_ = 0x1994; // Integer
			constexpr auto m_iBackstabs_ = 0x1998; // Integer
			constexpr auto m_iHealPoints_ = 0x199c; // Integer
			constexpr auto m_iInvulns_ = 0x19a0; // Integer
			constexpr auto m_iTeleports_ = 0x19a4; // Integer
			constexpr auto m_iDamageDone_ = 0x19a8; // Integer
			constexpr auto m_iCrits_ = 0x19ac; // Integer
			constexpr auto m_iResupplyPoints_ = 0x19b0; // Integer
			constexpr auto m_iKillAssists_ = 0x19b4; // Integer
			constexpr auto m_iBonusPoints_ = 0x19b8; // Integer
			constexpr auto m_iPoints_ = 0x19bc; // Integer
			constexpr auto m_nPlayerState = 0x19c0; // Integer
			constexpr auto m_nPlayerCond = 0x19c4; // Integer
			constexpr auto m_nPlayerCondEx = 0x19c8; // Integer
			constexpr auto m_nPlayerCondEx2 = 0x19cc; // Integer
			constexpr auto m_nPlayerCondEx3 = 0x19d0; // Integer
			constexpr auto m_nPlayerCondEx4 = 0x19d4; // Integer
			constexpr auto _condition_bits = 0x19f0; // Integer
			constexpr auto m_nDisguiseTeam = 0x19f8; // Integer
			constexpr auto m_nDisguiseClass = 0x19fc; // Integer
			constexpr auto m_nDisguiseSkinOverride = 0x1a00; // Integer
			constexpr auto m_nMaskClass = 0x1a04; // Integer
			constexpr auto m_hDisguiseTarget = 0x1a08; // Integer
			constexpr auto m_iDisguiseHealth = 0x1a0c; // Integer
			constexpr auto m_nDesiredDisguiseClass = 0x1a10; // Integer
			constexpr auto m_nDesiredDisguiseTeam = 0x1a14; // Integer
			constexpr auto m_hDisguiseWeapon = 0x1a18; // Integer
			constexpr auto m_nTeamTeleporterUsed = 0x1a1c; // Integer
			constexpr auto m_flInvisChangeCompleteTime = 0x1a40; // Float
			constexpr auto m_nNumHealers = 0x1a78; // Integer
			constexpr auto m_nHalloweenBombHeadStage = 0x1a7c; // Integer
			constexpr auto m_bKingRuneBuffActive = 0x1a88; // Byte
			constexpr auto m_bLastDisguisedAsOwnTeam = 0x1a8a; // Byte
			constexpr auto m_iTauntIndex = 0x1a8c; // Integer
			constexpr auto m_iTauntConcept = 0x1a90; // Integer
			constexpr auto m_unTauntSourceItemID_Low = 0x1a94; // Integer
			constexpr auto m_unTauntSourceItemID_High = 0x1a98; // Integer
			constexpr auto m_bFeignDeathReady = 0x1ae0; // Byte
			constexpr auto m_iDesiredPlayerClass = 0x1ae4; // Integer
			constexpr auto m_flCloakMeter = 0x1aec; // Float
			constexpr auto m_bInUpgradeZone = 0x1af0; // Byte
			constexpr auto m_flEnergyDrinkMeter = 0x1af4; // Float
			constexpr auto m_flHypeMeter = 0x1af8; // Float
			constexpr auto m_flChargeMeter = 0x1afc; // Float
			constexpr auto m_flRageMeter = 0x1b00; // Float
			constexpr auto m_bRageDraining = 0x1b04; // Byte
			constexpr auto m_flNextRageEarnTime = 0x1b08; // Float
			constexpr auto m_bJumping = 0x1b24; // Byte
			constexpr auto m_iAirDash = 0x1b28; // Integer
			constexpr auto m_nAirDucked = 0x1b2c; // Integer
			constexpr auto m_flDuckTimer = 0x1b30; // Float
			constexpr auto m_flStealthNoAttackExpire = 0x1b34; // Float
			constexpr auto m_flStealthNextChangeTime = 0x1b38; // Float
			constexpr auto m_flRuneCharge = 0x1b3c; // Float
			constexpr auto m_iCritMult = 0x1b98; // Integer
			constexpr auto m_flMovementStunTime = 0x1be0; // Float
			constexpr auto m_iMovementStunAmount = 0x1be4; // Integer
			constexpr auto m_iMovementStunParity = 0x1be8; // Byte
			constexpr auto m_hStunner = 0x1bec; // Integer
			constexpr auto m_iStunFlags = 0x1bf0; // Integer
			constexpr auto m_iStunIndex = 0x1bf4; // Integer
			constexpr auto m_hCarriedObject = 0x1bf8; // Integer
			constexpr auto m_bCarryingObject = 0x1bfc; // Byte
			constexpr auto m_nArenaNumChanges = 0x1c04; // Integer
			constexpr auto m_iWeaponKnockbackID = 0x1c08; // Integer
			constexpr auto m_bLoadoutUnavailable = 0x1c0c; // Byte
			constexpr auto m_iItemFindBonus = 0x1c10; // Integer
			constexpr auto m_bShieldEquipped = 0x1c14; // Byte
			constexpr auto m_bParachuteEquipped = 0x1c15; // Byte
			constexpr auto m_iDecapitations = 0x1c18; // Integer
			constexpr auto m_iRevengeCrits = 0x1c3c; // Integer
			constexpr auto m_iNextMeleeCrit = 0x1c40; // Integer
			constexpr auto m_iDisguiseBody = 0x1c4c; // Integer
			constexpr auto m_iSpawnRoomTouchCount = 0x1c50; // Integer
			constexpr auto m_flNextNoiseMakerTime = 0x1c54; // Float
			constexpr auto m_iKillCountSinceLastDeploy = 0x1c74; // Integer
			constexpr auto m_flFirstPrimaryAttack = 0x1c78; // Float
			constexpr auto m_flSpyTranqBuffDuration = 0x1c7c; // Float
			constexpr auto m_bArenaFirstBloodBoost = 0x1cd8; // Byte
			constexpr auto m_bHasPasstimeBall = 0x1cec; // Byte
			constexpr auto m_bIsTargetedForPasstimePass = 0x1ced; // Byte
			constexpr auto m_hPasstimePassTarget = 0x1cf0; // Integer
			constexpr auto m_askForBallTime = 0x1cf4; // Float
			constexpr auto m_flHolsterAnimTime = 0x1cf8; // Float
			constexpr auto m_hSwitchTo = 0x1cfc; // Integer
			constexpr auto m_hItem = 0x1d34; // Integer
			constexpr auto m_hCoach = 0x1d3c; // Integer
			constexpr auto m_hStudent = 0x1d40; // Integer
			constexpr auto m_flMvMLastDamageTime = 0x1d5c; // Float
			constexpr auto m_bInPowerPlay = 0x1d60; // Byte
			constexpr auto m_iSpawnCounter = 0x1d64; // Integer
			constexpr auto m_bArenaSpectator = 0x1d68; // Byte
			constexpr auto m_bIsMiniBoss = 0x1d69; // Byte
			constexpr auto m_bIsABot = 0x1d6a; // Byte
			constexpr auto m_nBotSkill = 0x1d6c; // Integer
			constexpr auto m_bSaveMeParity = 0x1d74; // Byte
			constexpr auto m_bIsCoaching = 0x1d76; // Byte
			constexpr auto m_angEyeAngles0 = 0x1d78; // Float
			constexpr auto m_angEyeAngles0_ = 0x1d78; // Float
			constexpr auto m_angEyeAngles1 = 0x1d7c; // Float
			constexpr auto m_angEyeAngles1_ = 0x1d7c; // Float
			constexpr auto m_bAllowMoveDuringTaunt = 0x1d84; // Byte
			constexpr auto m_bIsReadyToHighFive = 0x1d98; // Byte
			constexpr auto m_hHighFivePartner = 0x1d9c; // Integer
			constexpr auto m_nForceTauntCam = 0x1da0; // Integer
			constexpr auto m_flTauntYaw = 0x1da4; // Float
			constexpr auto m_nActiveTauntSlot = 0x1dac; // Integer
			constexpr auto m_iTauntItemDefIndex = 0x1db4; // Short
			constexpr auto m_flCurrentTauntMoveSpeed = 0x1db8; // Float
			constexpr auto m_flVehicleReverseTime = 0x1dbc; // Float
			constexpr auto m_nCurrency = 0x307c; // Integer
			constexpr auto m_nExperienceLevel = 0x3084; // Integer
			constexpr auto m_nExperienceLevelProgress = 0x3088; // Integer
			constexpr auto m_bMatchSafeToLeave = 0x3090; // Byte
			constexpr auto m_nActiveWpnClip = 0x3092; // Short
			constexpr auto m_flHeadScale = 0x30a0; // Float
			constexpr auto m_flTorsoScale = 0x30a4; // Float
			constexpr auto m_flHandScale = 0x30a8; // Float
			constexpr auto m_bUseBossHealthBar = 0x30c8; // Byte
			constexpr auto m_bUsingVRHeadset = 0x30c9; // Byte
			constexpr auto m_bForcedSkin = 0x30ca; // Byte
			constexpr auto m_nForcedSkin = 0x30cc; // Integer
			constexpr auto m_hGrapplingHookTarget = 0x30dc; // Integer
			constexpr auto m_hSecondaryLastWeapon = 0x30e0; // Integer
			constexpr auto m_bUsingActionSlot = 0x30e4; // Byte
			constexpr auto m_iCampaignMedals = 0x30e8; // Integer
			constexpr auto m_flInspectTime = 0x30ec; // Float
			constexpr auto m_flHelpmeButtonPressTime = 0x30f0; // Float
			constexpr auto m_bViewingCYOAPDA = 0x30f4; // Byte
			constexpr auto m_bRegenerating = 0x30f5; // Byte
			constexpr auto m_iPlayerSkinOverride = 0x312c; // Integer

// cbaseplayer

			constexpr auto m_hViewModel = 0x0; // Array
			constexpr auto m_nNextThinkTick = 0x88; // Integer
			constexpr auto m_lifeState = 0xa5; // Byte
			constexpr auto m_iHealth = 0xa8; // Integer
			constexpr auto m_vecViewOffset0 = 0xfc; // Float
			constexpr auto m_vecViewOffset1 = 0x100; // Float
			constexpr auto m_vecViewOffset2 = 0x104; // Float
			constexpr auto m_vecVelocity0 = 0x120; // Float
			constexpr auto m_vecVelocity1 = 0x124; // Float
			constexpr auto m_vecVelocity2 = 0x128; // Float
			constexpr auto m_vecBaseVelocity = 0x184; // Vector
			constexpr auto m_nWaterLevel = 0x1a8; // Byte
			constexpr auto m_hGroundEntity = 0x280; // Integer
			constexpr auto m_flFriction = 0x288; // Float
			constexpr auto m_fFlags = 0x37c; // Integer
			constexpr auto m_iHideHUD = 0xe58; // Integer
			constexpr auto m_flFOVRate = 0xe5c; // Float
			constexpr auto m_bDucked = 0xe60; // Byte
			constexpr auto m_bDucking = 0xe61; // Byte
			constexpr auto m_bInDuckJump = 0xe62; // Byte
			constexpr auto m_flDucktime = 0xe64; // Float
			constexpr auto m_flDuckJumpTime = 0xe68; // Float
			constexpr auto m_flJumpTime = 0xe6c; // Float
			constexpr auto m_flFallVelocity = 0xe74; // Float
			constexpr auto m_vecPunchAngle = 0xe8c; // Vector
			constexpr auto m_vecPunchAngleVel = 0xec8; // Vector
			constexpr auto m_bDrawViewmodel = 0xf04; // Byte
			constexpr auto m_bWearingSuit = 0xf05; // Byte
			constexpr auto m_bPoisoned = 0xf06; // Byte
			constexpr auto m_bForceLocalPlayerDraw = 0xf07; // Byte
			constexpr auto m_flStepSize = 0xf0c; // Float
			constexpr auto m_bAllowAutoMovement = 0xf10; // Byte
			constexpr auto m_skybox3dscale = 0xf18; // Integer
			constexpr auto m_skybox3dorigin = 0xf1c; // Vector
			constexpr auto m_skybox3darea = 0xf28; // Integer
			constexpr auto m_skybox3dfogdirPrimary = 0xf30; // Vector
			constexpr auto m_skybox3dfogcolorPrimary = 0xf3c; // Integer
			constexpr auto m_skybox3dfogcolorSecondary = 0xf40; // Integer
			constexpr auto m_skybox3dfogstart = 0xf4c; // Float
			constexpr auto m_skybox3dfogend = 0xf50; // Float
			constexpr auto m_skybox3dfogmaxdensity = 0xf58; // Float
			constexpr auto m_skybox3dfogenable = 0xf6c; // Byte
			constexpr auto m_skybox3dfogblend = 0xf6d; // Byte
			constexpr auto m_PlayerFogm_hCtrl = 0xf74; // Integer
			constexpr auto m_audiolocalSound0 = 0xf98; // Vector
			constexpr auto m_audiolocalSound1 = 0xfa4; // Vector
			constexpr auto m_audiolocalSound2 = 0xfb0; // Vector
			constexpr auto m_audiolocalSound3 = 0xfbc; // Vector
			constexpr auto m_audiolocalSound4 = 0xfc8; // Vector
			constexpr auto m_audiolocalSound5 = 0xfd4; // Vector
			constexpr auto m_audiolocalSound6 = 0xfe0; // Vector
			constexpr auto m_audiolocalSound7 = 0xfec; // Vector
			constexpr auto m_audiosoundscapeIndex = 0xff8; // Integer
			constexpr auto m_audiolocalBits = 0xffc; // Integer
			constexpr auto m_audioentIndex = 0x1000; // Integer
			constexpr auto m_szScriptOverlayMaterial = 0x1005; // String (260)
			constexpr auto deadflag = 0x112c; // Byte
			constexpr auto m_iFOV = 0x113c; // Integer
			constexpr auto m_iFOVStart = 0x1140; // Integer
			constexpr auto m_flFOVTime = 0x1144; // Float
			constexpr auto m_iDefaultFOV = 0x1148; // Integer
			constexpr auto m_hZoomOwner = 0x114c; // Integer
			constexpr auto m_fOnTarget = 0x1150; // Byte
			constexpr auto m_hConstraintEntity = 0x1188; // Integer
			constexpr auto m_vecConstraintCenter = 0x118c; // Vector
			constexpr auto m_flConstraintRadius = 0x1198; // Float
			constexpr auto m_flConstraintWidth = 0x119c; // Float
			constexpr auto m_flConstraintSpeedFactor = 0x11a0; // Float
			constexpr auto m_iObserverMode = 0x11a4; // Integer
			constexpr auto m_hObserverTarget = 0x11a8; // Integer
			constexpr auto m_flDeathTime = 0x11c8; // Float
			constexpr auto m_hVehicle = 0x11d4; // Integer
			constexpr auto m_hUseEntity = 0x11dc; // Integer
			constexpr auto m_flMaxspeed = 0x11e0; // Float
			constexpr auto m_iBonusProgress = 0x11e4; // Integer
			constexpr auto m_iBonusChallenge = 0x11e8; // Integer
			constexpr auto m_nTickBase = 0x1254; // Integer
			constexpr auto m_hLastWeapon = 0x1268; // Integer
			constexpr auto m_hViewModel0 = 0x1280; // Integer
			constexpr auto m_flLaggedMovementValue = 0x13a4; // Float
			constexpr auto m_szLastPlaceName = 0x13c4; // String (18)

// cbaseentity

constexpr auto movetype = 0x0; // Integer
			constexpr auto m_nRenderFX = 0x58; // Byte
			constexpr auto m_clrRender = 0x5c; // Integer
			constexpr auto m_flAnimTime = 0x64; // Integer
			constexpr auto m_flSimulationTime = 0x6c; // Integer
			constexpr auto m_ubInterpolationFrame = 0x78; // Byte
			constexpr auto m_fEffects = 0x7c; // Integer
			constexpr auto m_nRenderMode = 0x80; // Byte
			constexpr auto m_nModelIndex = 0x90; // Integer
			constexpr auto m_iTeamNum = 0xb0; // Integer
			constexpr auto m_PredictableID = 0xb4; // Integer
			constexpr auto m_iParentAttachment = 0x1a6; // Byte
			constexpr auto moveparent = 0x1bc; // Integer
			constexpr auto m_vecMinsPreScaled = 0x1d0; // Vector
			constexpr auto m_vecMaxsPreScaled = 0x1dc; // Vector
			constexpr auto m_vecMins = 0x1e8; // Vector
			constexpr auto m_vecMaxs = 0x1f4; // Vector
			constexpr auto m_usSolidFlags = 0x204; // Integer
			constexpr auto m_nSurroundType = 0x208; // Integer
			constexpr auto m_nSolidType = 0x209; // Integer
			constexpr auto m_triggerBloat = 0x20a; // Integer
			constexpr auto m_bUniformTriggerBloat = 0x20b; // Byte
			constexpr auto m_vecSpecifiedSurroundingMinsPreScaled = 0x20c; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxsPreScaled = 0x218; // Vector
			constexpr auto m_vecSpecifiedSurroundingMins = 0x224; // Vector
			constexpr auto m_vecSpecifiedSurroundingMaxs = 0x230; // Vector
			constexpr auto m_flElasticity = 0x274; // Float
			constexpr auto m_flShadowCastDistance = 0x278; // Float
			constexpr auto m_vecOrigin = 0x364; // Vector
			constexpr auto m_angRotation = 0x370; // Vector
			constexpr auto m_CollisionGroup = 0x380; // Integer
			constexpr auto m_bIsPlayerSimulated = 0x4f4; // Byte
			constexpr auto m_bSimulatedEveryTick = 0x4f5; // Integer
			constexpr auto m_bAnimatedEveryTick = 0x4f6; // Integer
			constexpr auto m_bAlternateSorting = 0x4f7; // Byte
			constexpr auto m_iTextureFrameIndex = 0x4f8; // Byte
			constexpr auto m_hOwnerEntity = 0x504; // Integer
			constexpr auto m_hEffectEntity = 0x508; // Integer

